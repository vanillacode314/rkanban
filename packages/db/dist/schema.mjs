import"./chunk-CPYK6UZW.mjs";import{c as l}from"./chunk-B55BGTTA.mjs";import{sql as o}from"drizzle-orm";import{integer as t,sqliteTable as d,text as e,unique as s}from"drizzle-orm/sqlite-core";import{createSelectSchema as i}from"drizzle-zod";import{nanoid as a}from"nanoid";var w=d("refreshTokens",{expiresAt:t("expiresAt",{mode:"timestamp"}).notNull(),id:e("id").primaryKey().$defaultFn(()=>a()),token:e("token").notNull(),userId:e("userId").notNull().references(()=>r.id,{onDelete:"cascade"})}),D=d("verificationTokens",{expiresAt:t("expiresAt",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date(Date.now()+l("10 min"))),id:e("id").primaryKey().$defaultFn(()=>a()),token:e("token").notNull(),userId:e("userId").notNull().references(()=>r.id,{onDelete:"cascade"})}),k=d("forgotPasswordTokens",{expiresAt:t("expiresAt",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date(Date.now()+l("10 min"))),id:e("id").primaryKey().$defaultFn(()=>a()),token:e("token").notNull(),userId:e("userId").notNull().references(()=>r.id,{onDelete:"cascade"})}),r=d("users",{createdAt:t("createdAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`),email:e("email").notNull().unique(),emailVerified:t("emailVerified",{mode:"boolean"}).default(!1),encryptedPrivateKey:e("encryptedPrivateKey"),id:e("id").primaryKey().$defaultFn(()=>a()),passwordHash:e("passwordHash").notNull(),publicKey:e("publicKey"),salt:e("salt"),updatedAt:t("updatedAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`).$onUpdateFn(()=>new Date)}),c=d("boards",{createdAt:t("createdAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`),id:e("id").primaryKey().$defaultFn(()=>a()),index:t("index").notNull(),nodeId:e("nodeId").references(()=>u.id,{onDelete:"cascade"}).notNull(),title:e("title").notNull(),updatedAt:t("updatedAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`).$onUpdateFn(()=>new Date),userId:e("userId").references(()=>r.id,{onDelete:"cascade"}).notNull()},n=>({unq:s().on(n.index,n.userId,n.nodeId)})),p=d("tasks",{boardId:e("boardId").references(()=>c.id,{onDelete:"cascade"}).notNull(),createdAt:t("createdAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`),id:e("id").primaryKey().$defaultFn(()=>a()),index:t("index").notNull(),title:e("title").notNull(),updatedAt:t("updatedAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`).$onUpdateFn(()=>new Date),userId:e("userId").references(()=>r.id,{onDelete:"cascade"}).notNull()},n=>({unq:s().on(n.index,n.boardId)})),u=d("nodes",{createdAt:t("createdAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`),id:e("id").primaryKey().$defaultFn(()=>a()),isDirectory:t("isDirectory",{mode:"boolean"}).notNull(),name:e("name").notNull(),parentId:e("parentId").references(()=>u.id,{onDelete:"cascade"}),updatedAt:t("updatedAt",{mode:"timestamp"}).notNull().default(o`(unixepoch('now'))`).$onUpdate(()=>new Date),userId:e("userId").notNull().references(()=>r.id,{onDelete:"cascade"})},n=>({unq:s().on(n.name,n.parentId,n.userId)})),T=i(u),h=i(c),$=i(p);export{c as boards,h as boardsSchema,k as forgotPasswordTokens,u as nodes,T as nodesSchema,w as refreshTokens,p as tasks,$ as tasksSchema,r as users,D as verificationTokens};
//# sourceMappingURL=schema.mjs.map